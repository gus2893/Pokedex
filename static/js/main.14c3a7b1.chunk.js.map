{"version":3,"sources":["components/PokemonInfo.js","api/pokiApi.js","components/App.js","actions/index.js","reducers/index.js","reducers/PokemonReducer.js","index.js"],"names":["PokemonInfo","_ref","pokemon","details","picture","type1","pokemonPicture","sprites","front_default","back_default","type2","types","type","name","react_default","a","createElement","id","weight","toFixed","height","style","float","Image","src","axios","create","baseURL","App","state","next","prev","componentDidMount","_this","props","fetchPokemon","navigate","pokeId","setState","_this2","this","Container","align","Segment","compact","inverted","color","borderRadius","padded","size","backgroundColor","components_PokemonInfo","pokemonData","Divider","Grid","columns","Row","Column","width","verticalAlign","paddingLeft","paddingBottom","Icon","bordered","disabled","onClick","pokemonId","Button","content","circular","floated","paddingRight","paddingTop","Component","connect","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","pokiApi","get","concat","sent","payload","data","stop","_x","apply","arguments","combineReducers","length","undefined","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.14c3a7b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Image} from 'semantic-ui-react';\r\n\r\nconst PokemonInfo = ({pokemon , details, picture}) =>{\r\n    \r\n    if(!pokemon){\r\n        return null;\r\n    }\r\n    const pokemonPicture = (picture) ? pokemon.sprites.front_default : pokemon.sprites.back_default;\r\n\r\n    let type1, type2 = '';\r\n    if(pokemon.types[1]){\r\n        type1 = pokemon.types[0].type.name;\r\n        type2 = pokemon.types[1].type.name;\r\n    }else {\r\n        type1 = pokemon.types[0].type.name;\r\n    }\r\n    \r\n    if(details){\r\n        return (\r\n            <div>\r\n                {pokemon.name} #{pokemon.id}<br/>\r\n                <br/>\r\n                Weight: {(pokemon.weight/4.536).toFixed(0)}lbs<br/>\r\n                Height: {(pokemon.height*10).toFixed(0)}cm<br/>\r\n                Types: <br/>\r\n                {type1}<br/>\r\n                {type2}\r\n\r\n            </div>\r\n            ); \r\n\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div style={{float:'right'}}>#{pokemon.id}</div><br/>\r\n                <Image src={pokemonPicture}/>\r\n                {pokemon.name}<br/>\r\n            </div>\r\n            ); \r\n    }\r\n    \r\n\r\n \r\n}\r\n\r\nexport default PokemonInfo;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://pokeapi.co/api/v2/\"\r\n});","import React,{Component} from 'react';\r\nimport PokemonInfo from './PokemonInfo';\r\nimport { connect } from 'react-redux';\r\nimport {fetchPokemon} from '../actions';\r\nimport {Button, Container, Segment, Grid, Divider, Icon} from 'semantic-ui-react';\r\n\r\nclass App extends Component {\r\n    state = {next: false, prev:true, details: false, picture: true}\r\n    \r\n    componentDidMount = () =>{\r\n        this.props.fetchPokemon(1);\r\n    }\r\n    navigate = pokeId => {\r\n        this.props.fetchPokemon(pokeId);\r\n        this.setState({prev: (pokeId-1===0) ? true : false})\r\n    }\r\n    render(){\r\n        const {pokemon} = this.props;\r\n        return (\r\n            <Container align='center' >\r\n                <Segment align='center' compact inverted color='red' style={{borderRadius: '50px'}}>\r\n                <Segment align='center'  padded='very' inverted color='black'  style={{borderRadius: '18px'}}>\r\n                <Segment size='large' padded style={{ backgroundColor:'lightgrey'}}>\r\n                    <PokemonInfo pokemon = {pokemon.pokemonData} details ={this.state.details} picture ={this.state.picture} /> \r\n                </Segment>\r\n                              \r\n                </Segment>\r\n                <Divider/>\r\n                <Divider/>\r\n                <Grid columns={3} >\r\n                    <Grid.Row >\r\n                        <Grid.Column  width={1}>    \r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column  width={13}>\r\n                            <Grid.Column  verticalAlign='middle' align='left' style={{paddingLeft: '35px', paddingBottom: '4px'}}>\r\n                                <Icon bordered inverted color='black'  name='caret up' disabled={this.state.next} onClick={()=> this.navigate(pokemon.pokemonId+1)}></Icon>\r\n                            </Grid.Column>\r\n                            \r\n                            \r\n                            <Icon bordered inverted color='black'  name='caret left' disabled={this.state.picture} onClick ={()=> this.setState({picture : true})}/>\r\n                            <Icon bordered inverted color='black'  name='circle' style={{paddingLeft: '35px'}}></Icon>\r\n                            <Icon bordered inverted color='black'  name='caret right' disabled={!this.state.picture} onClick ={()=> this.setState({picture : false})}></Icon>\r\n                            \r\n                            <Button \r\n                                content='A' \r\n                                circular \r\n                                color='black' \r\n                                compact \r\n                                floated='right'\r\n                                onClick ={()=> this.setState({details : true})}>\r\n                            </Button>\r\n                            <Button \r\n                                content='B' \r\n                                circular \r\n                                color='black' \r\n                                compact \r\n                                floated='right'\r\n                                onClick ={()=> this.setState({details : false})}>\r\n                            </Button>\r\n\r\n                            \r\n\r\n                            <Grid.Column width={1} verticalAlign='middle' style={{paddingRight: '88px', paddingTop: '4px'}}>\r\n                                <Icon \r\n                                    bordered inverted color='black'  \r\n                                    name='caret down'                                     \r\n                                    disabled={this.state.prev} \r\n                                    onClick={()=> this.navigate(pokemon.pokemonId-1)}>\r\n                                </Icon>\r\n                            </Grid.Column>\r\n                            <Divider/>\r\n                            <Grid.Column width={9}>\r\n                                <Button size='mini' content='Select' circular color='black' compact>\r\n                                </Button>\r\n                                <Button size='mini' content='Start' circular color='black' compact>\r\n                                </Button>\r\n                            </Grid.Column>\r\n                            \r\n                                \r\n                            \r\n                        \r\n                   \r\n\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={1}>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row  >\r\n\r\n                    </Grid.Row>\r\n                </Grid>\r\n                </Segment>\r\n            </Container>     \r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        pokemon : state.pokemon,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPokemon }) (App);","import pokiApi from '../api/pokiApi';\r\n\r\nexport const fetchPokemon = pokemonId => async dispatch => {\r\n   const response = await pokiApi.get(`pokemon/${pokemonId}`);\r\n\r\n   dispatch({type: 'FETCH_POKEMON' , \r\n        payload: {\r\n            pokemonData: response.data,\r\n            pokemonId\r\n        }\r\n        });\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport PokemonReducer from './PokemonReducer';\r\n\r\nexport default combineReducers({\r\n    pokemon: PokemonReducer\r\n});","export default (state = [], action) => {\r\n    switch(action.type){\r\n        case \"FETCH_POKEMON\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n        \r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.querySelector('#root'));\n\n"],"sourceRoot":""}